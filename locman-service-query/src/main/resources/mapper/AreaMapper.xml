<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.run.locman.api.query.repository.AreaQueryRepository">

	<resultMap type="com.run.locman.api.entity.Area" id="AreaResultMap">
		<result column="id" property="id" javaType="String" />
		<result column="areaCode" property="areaCode" javaType="String" />
		<result column="areaName" property="areaName" javaType="String" />
	</resultMap>

	<sql id="Base_Column">
		id, areaCode, areaName
	</sql>
	<sql id="Base_Condition">
		<if test="id != null">
			and id=#{id}
		</if>
		<if test="areaCode != null">
			and areaCode=#{areaCode}
		</if>
		<if test="areaName != null">
			and areaName=#{areaName}
		</if>
	</sql>

	<select id="findById" resultMap="AreaResultMap" parameterType="String">
		select
		<include refid="Base_Column" />
		from Area where id=#{id}
	</select>
	<select id="findByParams" resultMap="AreaResultMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column" />
		from Area
		<where>
			<include refid="Base_Condition" />
		</where>
	</select>
	<select id="findAll" resultMap="AreaResultMap">
		select
		<include refid="Base_Column" />
		from Area
	</select>
	<select id="findByModel" resultMap="AreaResultMap"
		parameterType="com.run.locman.api.entity.Area">
		select
		<include refid="Base_Column" />
		from Area where 1=1
		<include refid="Base_Condition" />
	</select>

	<insert id="insertModel" keyProperty="id"
		parameterType="com.run.locman.api.entity.Area">
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			SELECT REPLACE(UUID(),'-','') FROM DUAL
		</selectKey>
		insert into Area(
		<include refid="Base_Column" />
		) values (#{id}, #{areaCode}, #{areaName})
	</insert>

	<update id="updateModel" parameterType="com.run.locman.api.entity.Area">
		update Area set id=#{id},
		areaCode=#{areaCode}, areaName=#{areaName} where id=#{id}
	</update>
	<update id="updateParam" parameterType="com.run.locman.api.entity.Area">
		update Area set
		<if test="id != null">
			id=#{id}
		</if>
		<if test="areaCode != null">
			,areaCode=#{areaCode}
		</if>
		<if test="areaName != null">
			,areaName=#{areaName}
		</if>
		where id=#{id}
	</update>

	<delete id="deleteById" parameterType="String">
		delete from Area where
		id=#{id}
	</delete>

	<select id="queryAreaListPage" parameterType="java.util.Map"
		resultMap="AreaResultMap">
		SELECT
		<include refid="Base_Column" />
		FROM Area
	</select>

	<select id="queryAreaListPageCount" parameterType="java.util.Map"
		resultType="int">
		SELECT COUNT(1) FROM Area
	</select>

	<select id="findSubAreasByCode" resultMap="AreaResultMap"
		parameterType="String">
		select
		<include refid="Base_Column" />
		from Area
		<where>
			<if
				test="areaCode != null and areaCode != '' and prefix != null and prefix != '' and suffix == '0000'">
				areaCode like CONCAT(#{prefix},'%00') and areaCode !=
				#{areaCode}
			</if>
			<if
				test="areaCode != null and areaCode != '' and prefix != null and prefix != '' and suffix == '00'">
				areaCode like CONCAT(#{prefix},'%') and areaCode != #{areaCode}
			</if>
			<if
				test="areaCode != null and areaCode != '' and prefix != null and prefix != '' and suffix == null">
				areaCode like CONCAT(#{prefix},'%') and areaCode != #{areaCode}
			</if>
			<if test="areaCode == null or areaCode == ''">
				areaCode like CONCAT('%','0000')
			</if>
		</where>
		order by areaCode
	</select>

	<select id="getAreaByCode" resultType="java.util.Map"
		parameterType="java.util.Map">
		select areaCode,areaName from Area where areaCode like #{areaCode1}
		<if test="areaCode2 != null">
			and areaCode != #{areaCode2}
		</if>
	</select>

	<select id="getAreaName" resultType="String" parameterType="java.util.List">
		SELECT
		REPLACE (
		GROUP_CONCAT(areaName),
		',',
		''
		) address
		FROM
		Area
		WHERE
		areaCode IN
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	<select id="getAreaInfo" parameterType="String" resultType="java.util.Map">
	select 
		accessSecret,
		areaName,
		longitude,
		latitude,
		zoom,
		companyName
		from 
		DynamicAddress 
		where accessSecret=#{accessSecret}
	</select>
	
	<select id="getAccessInfoByUrl" parameterType="String" resultType="String">
		select 
			displayedWords
			from 
			DynamicAddress 
		where urlStr=#{urlStr}
	</select>

</mapper>
